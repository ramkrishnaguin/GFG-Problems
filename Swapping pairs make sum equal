class Solution:
    def findSwapValues(self,a, n, b, m):
        # Your code goes here
        sum_a = sum(a)
        sum_b = sum(b)
        
        # If the difference between sums is not even, we can't find such a pair
        if (sum_b - sum_a) % 2 != 0:
            return -1
        
        delta = (sum_b - sum_a) // 2
        
        # Use the smaller array to create the set for efficient lookup
        if n <= m:
            set_b = set(b)
            for num in a:
                complement = num + delta
                if complement in set_b:
                    return 1
        else:
            set_a = set(a)
            for num in b:
                complement = num - delta
                if complement in set_a:
                    return 1
        
        return -1
