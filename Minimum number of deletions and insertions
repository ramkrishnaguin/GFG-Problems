#User function Template for python3
class Solution:
	def minOperations(self, str1, str2):
		# code here
		m = len(str1)
        n = len(str2)
        
        # Create a DP table to store the length of LCS
        dp = [[0] * (n + 1) for _ in range(m + 1)]
        
        # Fill the DP table
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                if str1[i - 1] == str2[j - 1]:
                    dp[i][j] = dp[i - 1][j - 1] + 1
                else:
                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])
        
        # Length of LCS
        lcs_length = dp[m][n]
        
        # Number of deletions = length of str1 - length of LCS
        deletions = m - lcs_length
        
        # Number of insertions = length of str2 - length of LCS
        insertions = n - lcs_length
        
        # Total operations = deletions + insertions
        return deletions + insertions
